{"ast":null,"code":"import * as React from 'react';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\nconst Context = /*#__PURE__*/React.createContext({});\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  renderPriority = 0,\n  autoClear = true,\n  onUpdate,\n  onTarget,\n  children: GizmoHelperComponent\n}) => {\n  const size = useThree(({\n    size\n  }) => size);\n  const mainCamera = useThree(({\n    camera\n  }) => camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(({\n    controls\n  }) => controls);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const backgroundRef = React.useRef();\n  const gizmoRef = React.useRef();\n  const virtualCam = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n  const tweenCamera = React.useCallback(direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  }, [defaultControls, mainCamera, onTarget, invalidate]);\n  React.useEffect(() => {\n    if (scene.background) {\n      //Interchange the actual scene background with the virtual scene\n      backgroundRef.current = scene.background;\n      scene.background = null;\n      virtualScene.background = backgroundRef.current;\n    }\n    return () => {\n      // reset on unmount\n      if (backgroundRef.current) scene.background = backgroundRef.current;\n    };\n  }, []);\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      var _gizmoRef$current;\n\n      // Animate step\n      if (animating.current) {\n        if (q1.angleTo(q2) < 0.01) {\n          animating.current = false;\n        } else {\n          const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n          q1.rotateTowards(q2, step); // animate orientation\n\n          mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n          mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n          mainCamera.quaternion.copy(q1);\n          if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n          invalidate();\n        }\n      } // Sync Gizmo with main camera orientation\n\n      matrix.copy(mainCamera.matrix).invert();\n      (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix); // Render virtual camera\n\n      if (autoClear) gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  }, renderPriority);\n  const raycast = useCamera(virtualCam);\n  const gizmoHelperContext = React.useMemo(() => ({\n    tweenCamera,\n    raycast\n  }), [tweenCamera]); // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    ref: virtualCam,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\nexport { GizmoHelper, useGizmoContext };","map":{"version":3,"names":["React","useThree","useFrame","createPortal","Object3D","Matrix4","Quaternion","Vector3","Scene","OrthographicCamera","useCamera","Context","createContext","useGizmoContext","useContext","turnRate","Math","PI","dummy","matrix","q1","q2","target","targetPosition","GizmoHelper","alignment","margin","renderPriority","autoClear","onUpdate","onTarget","children","GizmoHelperComponent","size","mainCamera","camera","defaultControls","controls","gl","scene","invalidate","backgroundRef","useRef","gizmoRef","virtualCam","virtualScene","useState","animating","radius","focusPoint","tweenCamera","useCallback","direction","current","position","distanceTo","copy","quaternion","multiplyScalar","add","lookAt","useEffect","background","_","delta","_gizmoRef$current","angleTo","step","rotateTowards","set","applyQuaternion","up","normalize","update","invert","setFromRotationMatrix","clearDepth","render","raycast","gizmoHelperContext","useMemo","marginX","marginY","x","endsWith","width","y","startsWith","height","createElement","Provider","value","ref"],"sources":["C:/0-Projects/Test/WebAR/WebAR_frontend/node_modules/@react-three/drei/core/GizmoHelper.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\n\nconst Context = /*#__PURE__*/React.createContext({});\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  renderPriority = 0,\n  autoClear = true,\n  onUpdate,\n  onTarget,\n  children: GizmoHelperComponent\n}) => {\n  const size = useThree(({\n    size\n  }) => size);\n  const mainCamera = useThree(({\n    camera\n  }) => camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(({\n    controls\n  }) => controls);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const backgroundRef = React.useRef();\n  const gizmoRef = React.useRef();\n  const virtualCam = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n  const tweenCamera = React.useCallback(direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  }, [defaultControls, mainCamera, onTarget, invalidate]);\n  React.useEffect(() => {\n    if (scene.background) {\n      //Interchange the actual scene background with the virtual scene\n      backgroundRef.current = scene.background;\n      scene.background = null;\n      virtualScene.background = backgroundRef.current;\n    }\n\n    return () => {\n      // reset on unmount\n      if (backgroundRef.current) scene.background = backgroundRef.current;\n    };\n  }, []);\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      var _gizmoRef$current;\n\n      // Animate step\n      if (animating.current) {\n        if (q1.angleTo(q2) < 0.01) {\n          animating.current = false;\n        } else {\n          const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n          q1.rotateTowards(q2, step); // animate orientation\n\n          mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n          mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n          mainCamera.quaternion.copy(q1);\n          if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n          invalidate();\n        }\n      } // Sync Gizmo with main camera orientation\n\n\n      matrix.copy(mainCamera.matrix).invert();\n      (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix); // Render virtual camera\n\n      if (autoClear) gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  }, renderPriority);\n  const raycast = useCamera(virtualCam);\n  const gizmoHelperContext = React.useMemo(() => ({\n    tweenCamera,\n    raycast\n  }), [tweenCamera]); // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    ref: virtualCam,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\n\nexport { GizmoHelper, useGizmoContext };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}