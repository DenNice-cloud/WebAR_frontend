{"ast":null,"code":"import * as React from 'react';\nimport { useThree, useFrame, createPortal, useLoader } from '@react-three/fiber';\nimport { Scene, WebGLCubeRenderTarget, HalfFloatType, FloatType, CubeReflectionMapping, EquirectangularReflectionMapping, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\nconst isRef = obj => obj.current && obj.current.isScene;\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\nfunction Environment(props) {\n  return props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\nfunction EnvironmentMap({\n  scene,\n  background = false,\n  map\n}) {\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    if (map) {\n      const target = resolveScene(scene || defaultScene);\n      const oldbg = target.background;\n      const oldenv = target.environment;\n      if (background !== 'only') target.environment = map;\n      if (background) target.background = map;\n      return () => {\n        if (background !== 'only') target.environment = oldenv;\n        if (background) target.background = oldbg;\n      };\n    }\n  }, [scene, map]);\n  return null;\n}\nfunction EnvironmentPortal({\n  children,\n  near = 1,\n  far = 1000,\n  resolution = 256,\n  frames = 1,\n  background = false,\n  scene,\n  files,\n  path,\n  preset = undefined,\n  extensions\n}) {\n  const gl = useThree(state => state.gl);\n  const defaultScene = useThree(state => state.scene);\n  const camera = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useLayoutEffect(() => {\n    if (frames === 1) camera.current.update(gl, virtualScene);\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = fbo.texture;\n    if (background) target.background = fbo.texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [children, scene]);\n  let count = 1;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(gl, virtualScene);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), (files || preset) && /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions,\n    scene: virtualScene\n  })), virtualScene));\n}\nfunction EnvironmentCube({\n  background = false,\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  scene,\n  extensions\n}) {\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n  const defaultScene = useThree(state => state.scene);\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  const loaderResult = useLoader(loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path); // @ts-expect-error\n\n    loader.setDataType == null ? void 0 : loader.setDataType(FloatType);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  React.useLayoutEffect(() => {\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = texture;\n    if (background) target.background = texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [texture, background, scene]);\n  return null;\n}\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal };","map":{"version":3,"names":["React","useThree","useFrame","createPortal","useLoader","Scene","WebGLCubeRenderTarget","HalfFloatType","FloatType","CubeReflectionMapping","EquirectangularReflectionMapping","CubeTextureLoader","RGBELoader","presetsObj","CUBEMAP_ROOT","isRef","obj","current","isScene","resolveScene","scene","Environment","props","map","createElement","EnvironmentMap","children","EnvironmentPortal","EnvironmentCube","background","defaultScene","state","useLayoutEffect","target","oldbg","oldenv","environment","near","far","resolution","frames","files","path","preset","undefined","extensions","gl","camera","useRef","virtualScene","useState","fbo","useMemo","texture","type","update","count","Infinity","Fragment","ref","args","Error","Object","keys","join","isCubeMap","Array","isArray","loader","loaderResult","setPath","setDataType","mapping"],"sources":["C:/0-Projects/Test/WebAR/WebAR_frontend/node_modules/@react-three/drei/core/Environment.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame, createPortal, useLoader } from '@react-three/fiber';\nimport { Scene, WebGLCubeRenderTarget, HalfFloatType, FloatType, CubeReflectionMapping, EquirectangularReflectionMapping, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\n\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\n\nconst isRef = obj => obj.current && obj.current.isScene;\n\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\n\nfunction Environment(props) {\n  return props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\nfunction EnvironmentMap({\n  scene,\n  background = false,\n  map\n}) {\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    if (map) {\n      const target = resolveScene(scene || defaultScene);\n      const oldbg = target.background;\n      const oldenv = target.environment;\n      if (background !== 'only') target.environment = map;\n      if (background) target.background = map;\n      return () => {\n        if (background !== 'only') target.environment = oldenv;\n        if (background) target.background = oldbg;\n      };\n    }\n  }, [scene, map]);\n  return null;\n}\nfunction EnvironmentPortal({\n  children,\n  near = 1,\n  far = 1000,\n  resolution = 256,\n  frames = 1,\n  background = false,\n  scene,\n  files,\n  path,\n  preset = undefined,\n  extensions\n}) {\n  const gl = useThree(state => state.gl);\n  const defaultScene = useThree(state => state.scene);\n  const camera = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useLayoutEffect(() => {\n    if (frames === 1) camera.current.update(gl, virtualScene);\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = fbo.texture;\n    if (background) target.background = fbo.texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [children, scene]);\n  let count = 1;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(gl, virtualScene);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), (files || preset) && /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions,\n    scene: virtualScene\n  })), virtualScene));\n}\nfunction EnvironmentCube({\n  background = false,\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  scene,\n  extensions\n}) {\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  const defaultScene = useThree(state => state.scene);\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  const loaderResult = useLoader(loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path); // @ts-expect-error\n\n    loader.setDataType == null ? void 0 : loader.setDataType(FloatType);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  React.useLayoutEffect(() => {\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = texture;\n    if (background) target.background = texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [texture, background, scene]);\n  return null;\n}\n\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}