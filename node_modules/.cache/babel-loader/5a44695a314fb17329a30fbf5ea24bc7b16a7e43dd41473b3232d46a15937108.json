{"ast":null,"code":"var _jsxFileName = \"C:\\\\0-Projects\\\\Test\\\\WebAR\\\\WebAR_frontend\\\\src\\\\component\\\\Backpack.js\",\n  _s = $RefreshSig$();\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { TextureLoader } from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Backpack = ({\n  bodyColor,\n  material,\n  metalColor\n}) => {\n  _s();\n  const glb = useLoader(GLTFLoader, \"/models/backpack.glb\");\n  const baseColor = useLoader(TextureLoader, `/textures/${material}_baseColor.jpg`);\n  const normalMap = useLoader(TextureLoader, `/textures/${material}_normal.jpg`);\n  const roughnessMap = useLoader(TextureLoader, `/textures/${material}_occlusionRoughnessMetallic.jpg`);\n  const metalTexture = useLoader(TextureLoader, metalColor);\n\n  // console.log(\"glb === \", glb);\n  glb.scene.traverse(child => {\n    if (child.isMesh) {\n      child.material.map = baseColor;\n      child.material.normalMap = normalMap;\n      child.material.roughnessMap = roughnessMap;\n      child.material.needsUpdate = true;\n      if (child.material.name === \"metall\") {\n        child.material.map = metalTexture;\n        // child.material.needsUpdate = true;\n      }\n    }\n  });\n  glb.materials.body.color.set(bodyColor);\n  glb.materials.strap.color.set(bodyColor);\n  // glb.materials.metall.color.set(metalColor);\n\n  glb.scene.position.set(0, 0, 0);\n  glb.scene.scale.set(5, 5, 5);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: glb.scene,\n    dispose: null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Backpack, \"mvlv2F7154x5j7ExFqMZcPQ0e0s=\", false, function () {\n  return [useLoader, useLoader, useLoader, useLoader, useLoader];\n});\n_c = Backpack;\nexport default Backpack;\nvar _c;\n$RefreshReg$(_c, \"Backpack\");","map":{"version":3,"names":["GLTFLoader","TextureLoader","useLoader","jsxDEV","_jsxDEV","Backpack","bodyColor","material","metalColor","_s","glb","baseColor","normalMap","roughnessMap","metalTexture","scene","traverse","child","isMesh","map","needsUpdate","name","materials","body","color","set","strap","position","scale","object","dispose","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/0-Projects/Test/WebAR/WebAR_frontend/src/component/Backpack.js"],"sourcesContent":["import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { TextureLoader } from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\n\nconst Backpack = ({ bodyColor, material, metalColor }) => {\n  const glb = useLoader(GLTFLoader, \"/models/backpack.glb\");\n  const baseColor = useLoader(\n    TextureLoader,\n    `/textures/${material}_baseColor.jpg`\n  );\n  const normalMap = useLoader(\n    TextureLoader,\n    `/textures/${material}_normal.jpg`\n  );\n  const roughnessMap = useLoader(\n    TextureLoader,\n    `/textures/${material}_occlusionRoughnessMetallic.jpg`\n  );\n  const metalTexture = useLoader(TextureLoader, metalColor);\n\n  // console.log(\"glb === \", glb);\n  glb.scene.traverse((child) => {\n    if (child.isMesh) {\n      child.material.map = baseColor;\n      child.material.normalMap = normalMap;\n      child.material.roughnessMap = roughnessMap;\n      child.material.needsUpdate = true;\n\n      if (child.material.name === \"metall\") {\n        child.material.map = metalTexture;\n        // child.material.needsUpdate = true;\n      }\n    }\n  });\n  glb.materials.body.color.set(bodyColor);\n  glb.materials.strap.color.set(bodyColor);\n  // glb.materials.metall.color.set(metalColor);\n\n  glb.scene.position.set(0, 0, 0);\n  glb.scene.scale.set(5, 5, 5);\n\n  return (\n    <primitive\n      object={glb.scene}\n      dispose={null}\n    />\n  );\n}\n\nexport default Backpack;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,uCAAuC;AAClE,SAASC,aAAa,QAAQ,OAAO;AACrC,SAASC,SAAS,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,SAAS;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAMC,GAAG,GAAGR,SAAS,CAACF,UAAU,EAAE,sBAAsB,CAAC;EACzD,MAAMW,SAAS,GAAGT,SAAS,CACzBD,aAAa,EACb,aAAaM,QAAQ,gBACvB,CAAC;EACD,MAAMK,SAAS,GAAGV,SAAS,CACzBD,aAAa,EACb,aAAaM,QAAQ,aACvB,CAAC;EACD,MAAMM,YAAY,GAAGX,SAAS,CAC5BD,aAAa,EACb,aAAaM,QAAQ,iCACvB,CAAC;EACD,MAAMO,YAAY,GAAGZ,SAAS,CAACD,aAAa,EAAEO,UAAU,CAAC;;EAEzD;EACAE,GAAG,CAACK,KAAK,CAACC,QAAQ,CAAEC,KAAK,IAAK;IAC5B,IAAIA,KAAK,CAACC,MAAM,EAAE;MAChBD,KAAK,CAACV,QAAQ,CAACY,GAAG,GAAGR,SAAS;MAC9BM,KAAK,CAACV,QAAQ,CAACK,SAAS,GAAGA,SAAS;MACpCK,KAAK,CAACV,QAAQ,CAACM,YAAY,GAAGA,YAAY;MAC1CI,KAAK,CAACV,QAAQ,CAACa,WAAW,GAAG,IAAI;MAEjC,IAAIH,KAAK,CAACV,QAAQ,CAACc,IAAI,KAAK,QAAQ,EAAE;QACpCJ,KAAK,CAACV,QAAQ,CAACY,GAAG,GAAGL,YAAY;QACjC;MACF;IACF;EACF,CAAC,CAAC;EACFJ,GAAG,CAACY,SAAS,CAACC,IAAI,CAACC,KAAK,CAACC,GAAG,CAACnB,SAAS,CAAC;EACvCI,GAAG,CAACY,SAAS,CAACI,KAAK,CAACF,KAAK,CAACC,GAAG,CAACnB,SAAS,CAAC;EACxC;;EAEAI,GAAG,CAACK,KAAK,CAACY,QAAQ,CAACF,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC/Bf,GAAG,CAACK,KAAK,CAACa,KAAK,CAACH,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE5B,oBACErB,OAAA;IACEyB,MAAM,EAAEnB,GAAG,CAACK,KAAM;IAClBe,OAAO,EAAE;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEN,CAAC;AAAAzB,EAAA,CA3CKJ,QAAQ;EAAA,QACAH,SAAS,EACHA,SAAS,EAITA,SAAS,EAINA,SAAS,EAITA,SAAS;AAAA;AAAAiC,EAAA,GAd1B9B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}