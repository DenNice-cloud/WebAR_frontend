{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nnew THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useLayoutEffect(() => {\n    parentRef.current.count = parentRef.current.instanceMatrix.updateRange.count = parentRef.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n  }, [instances, range]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instanceRef.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n      count++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\nfunction Merged({\n  meshes,\n  children,\n  ...props\n}) {\n  const isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({\n    ...acc,\n    [key]: args[i]\n  }), {})));\n}\nexport { Instance, Instances, Merged };","map":{"version":3,"names":["_extends","THREE","React","extend","useFrame","mergeRefs","Composer","Position","i","instanceRef","globalContext","createContext","parentMatrix","Matrix4","instanceMatrix","tempMatrix","Color","translation","Vector3","rotation","Quaternion","scale","Instance","forwardRef","context","children","props","ref","useMemo","group","useRef","subscribe","getParent","useContext","useLayoutEffect","createElement","instance","instanceKey","Instances","range","limit","frames","Infinity","useState","parentRef","instances","setInstances","matrices","colors","mArray","Float32Array","identity","toArray","Array","map","current","count","updateRange","instanceColor","Math","min","undefined","length","useEffect","needsUpdate","updateMatrix","updateMatrixWorld","copy","matrixWorld","invert","decompose","compose","premultiply","color","api","filter","item","userData","matrixAutoUpdate","args","raycast","attach","array","itemSize","usage","DynamicDrawUsage","Provider","value","Merged","meshes","isArray","key","Object","keys","isMesh","components","values","geometry","material","uuid","reduce","acc"],"sources":["C:/0-Projects/Test/WebAR/WebAR_frontend/node_modules/@react-three/drei/core/Instances.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\n\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nnew THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useLayoutEffect(() => {\n    parentRef.current.count = parentRef.current.instanceMatrix.updateRange.count = parentRef.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n  }, [instances, range]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instanceRef.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n\n      count++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n\nfunction Merged({\n  meshes,\n  children,\n  ...props\n}) {\n  const isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({ ...acc,\n    [key]: args[i]\n  }), {})));\n}\n\nexport { Instance, Instances, Merged };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}